var documenterSearchIndex = {"docs":
[{"location":"Settings/#Model-domain-settings","page":"Settings","title":"Model domain settings","text":"","category":"section"},{"location":"Settings/","page":"Settings","title":"Settings","text":"For each domain we set variables related to the geometry and the resolution like:","category":"page"},{"location":"Settings/","page":"Settings","title":"Settings","text":"The following variables related to the geometry and the resolution are required:","category":"page"},{"location":"Settings/","page":"Settings","title":"Settings","text":"Variable Description\nTSTEP model timestep in seconds\nNLON number of points in x-direction\nNLAT number of points in y-direction\nLONC longitude of domain centre in degrees\nLATC latitude of domain center in degrees\nLON0 reference longitude of the projection in degrees\nLAT0 reference latitude of the projection in degrees\nGSIZE grid size in meters in both x- and y-direction\nEZONE number of points over extension zone in both x- and y-direction\nLMRT switch for rotated Mercator projection. If LMRT=.TRUE. LAT0 should be zero","category":"page"},{"location":"Settings/","page":"Settings","title":"Settings","text":"note: Note\nIf LAT0 = 90, the projection is polar stereographic. \nIf LAT0 < 90, the projection is lambert unless LMRT=.TRUE.._","category":"page"},{"location":"Settings/","page":"Settings","title":"Settings","text":"note: Restriction on NLON and NLAT\nNLON and NLAT should satisfy the equation 2^a  3^b  5^c, where either a  1 b  0 c  0  or a=b=c=0 ","category":"page"},{"location":"Projections/#Projections","page":"Projections","title":"Projections","text":"","category":"section"},{"location":"Projections/","page":"Projections","title":"Projections","text":"There are four projections available in HARMONIE","category":"page"},{"location":"Projections/","page":"Projections","title":"Projections","text":"polar stereographic, \nlambert, \nmercator \nrotated mercator. ","category":"page"},{"location":"Projections/","page":"Projections","title":"Projections","text":"The model itself chooses the best (least distortion) projection among the first three given your domain specifications. The rotated mercator projection is selected through the variable LROTMER.","category":"page"},{"location":"Projections/","page":"Projections","title":"Projections","text":"note: GRIB1 vs GRIB2\nThe polar stereographic project is defined at 90°N(S) whereas in GRIB1 it is defined at 60°N(S). ","category":"page"},{"location":"Projections/","page":"Projections","title":"Projections","text":"(Image: )","category":"page"},{"location":"Projections/","page":"Projections","title":"Projections","text":"Polar stereographic, Lambert and Mercator projection","category":"page"},{"location":"Projections/","page":"Projections","title":"Projections","text":"(Image: )","category":"page"},{"location":"Projections/","page":"Projections","title":"Projections","text":"Rotated mercator projection","category":"page"},{"location":"#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"","page":"Installation","title":"Installation","text":"Domains.jl is in the HarmonieRegistry. If you haven't added the Harmonie registry yet: In Julia enter REPL-mode (hitting ] as the first character of the command prompt) and add the registry  ","category":"page"},{"location":"","page":"Installation","title":"Installation","text":"(@v1.7) pkg> registry add https://github.com/Hirlam/HarmonieRegistry.git","category":"page"},{"location":"","page":"Installation","title":"Installation","text":"     Cloning registry from \"https://github.com/Hirlam/HarmonieRegistry.git\"\n       Added registry `HarmonieRegistry` to `~/.julia/registries/HarmonieRegistry`","category":"page"},{"location":"","page":"Installation","title":"Installation","text":"You might also want to registry add General  if this is the first time you use Julia. After that Domains.jl can be added by","category":"page"},{"location":"","page":"Installation","title":"Installation","text":"(@v1.7) pkg> add Domains","category":"page"},{"location":"","page":"Installation","title":"Installation","text":"   Resolving package versions...\n   Installed JSONSchema ─ v1.0.1\n   Installed Glob ─────── v1.3.0\n     Cloning [8047f4c8-798f-41f9-bdd5-7e8534b999d6] Domains from https://github.com/Hirlam/Domains.jl\n   Installed Domains ──── v0.2.1\n    Updating `~/.julia/environments/v1.7/Project.toml`\n  [8047f4c8] + Domains v0.2.1\n    Updating `~/.julia/environments/v1.7/Manifest.toml`\n  [8047f4c8] + Domains v0.2.1\n  [c27321d9] + Glob v1.3.0\n  [7d188eb4] + JSONSchema v1.0.1","category":"page"},{"location":"Module/#Module-functions","page":"Module functions","title":"Module functions","text":"","category":"section"},{"location":"Module/","page":"Module functions","title":"Module functions","text":"   Modules = [Domains]","category":"page"},{"location":"Module/#Domains.Domain","page":"Module functions","title":"Domains.Domain","text":"Domain definitions\n\n\n\n\n\n","category":"type"},{"location":"Module/#Domains.Domain-Tuple{Dict}","page":"Module functions","title":"Domains.Domain","text":"Domain(d::Dict)\n\nConstructor for domains from Dictionaries\n\n\n\n\n\n","category":"method"},{"location":"Module/#Domains.Domain-Tuple{String}","page":"Module functions","title":"Domains.Domain","text":"Domain(name::String)\n\nConstructor for Domain  \n\n\n\n\n\n","category":"method"},{"location":"Module/#Base.in-Tuple{Any, Domain}","page":"Module functions","title":"Base.in","text":"in(lonlat, d; with_ezone = false) \nlonlat in d \nlonlat ∈ d\n\nReturns true if lonlat is inside Domain d\n\n\n\n\n\n","category":"method"},{"location":"Module/#Domains.Plcc-Tuple{Domain}","page":"Module functions","title":"Domains.Plcc","text":"Plcc(d)\n\nReturns a Lambert Conformal Conic Proj4.Projection based on domain definitions in d\n\n\n\n\n\n","category":"method"},{"location":"Module/#Domains.Plonlat-Tuple{}","page":"Module functions","title":"Domains.Plonlat","text":"Plonlat()\n\nReturns longlat Proj4.Projection\n\n\n\n\n\n","category":"method"},{"location":"Module/#Domains.get_lcc_val-Tuple{Domain}","page":"Module functions","title":"Domains.get_lcc_val","text":"get_lcc_val(d)\n\nReturns a named tuple with boundary values of the domain in projected coordinates\n\n\n\n\n\n","category":"method"},{"location":"Module/#Domains.getgridpoints-Tuple{Any}","page":"Module functions","title":"Domains.getgridpoints","text":"getgridpoints(d; gsize=d.GSIZE)\n\nReturns an array with the lonlat coordinates of the grid points\n\n\n\n\n\n","category":"method"},{"location":"Module/#Domains.lcc2lonlat-Tuple{Domain, Any}","page":"Module functions","title":"Domains.lcc2lonlat","text":"lcc2lonlat(d,xy)\n\nReturns lonlat coordinates for Lambert Conformal Conic projection coordinates xy using domain definitions from d\n\n\n\n\n\n","category":"method"},{"location":"Module/#Domains.lonlat2lcc-Tuple{Domain, Any}","page":"Module functions","title":"Domains.lonlat2lcc","text":"lonlat2lcc(d,lonlat)\n\nReturns Lambert Conformal Conic projection coordinates for lonlat using domain definition from d\n\n\n\n\n\n","category":"method"}]
}
