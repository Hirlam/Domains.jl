var documenterSearchIndex = {"docs":
[{"location":"#Domain.jl-documentation-1","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"","category":"section"},{"location":"#Installation-1","page":"Domain.jl documentation","title":"Installation","text":"","category":"section"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"You can obtain Domain.jl using Julia's Pkg REPL-mode (hitting ] as the first character of the command prompt):","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"(v1.3) pkg> add https://github.com/Hirlam/Domains.jl","category":"page"},{"location":"#Domain-projections-1","page":"Domain.jl documentation","title":"Domain projections","text":"","category":"section"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"There are four projections available in HARMONIE","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"polar stereographic, \nlambert, \nmercator \nrotated mercator. ","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"The model itself chooses the best (least distortion) projection among the first three given your domain specifications. The rotated mercator projection is selected through the variable LROTMER.","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"note: GRIB1 vs GRIB2\nThe polar stereographic project is defined at 90°N(S) whereas in GRIB1 it is defined at 60°N(S). ","category":"page"},{"location":"#Model-domain-settings-1","page":"Domain.jl documentation","title":"Model domain settings","text":"","category":"section"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"For each domain we set variables related to the geometry and the resolution like:","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"The following variables related to the geometry and the resolution are required:","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"TSTEP is model timestep in seconds\nNLON is number of points in x-direction.\nNLAT is number of points in y-direction.\nLONC is the longitude of domain centre in degrees.\nLATC is the latitude of domain center in degrees.\nLON0 is the reference longitude of the projection in degrees.\nLAT0 is the reference latitude of the projection in degrees. \nIf LAT0 = 90, the projection is polar stereographic. \nIf LAT0 < 90, the projection is lambert unless LMRT=.TRUE.._\nGSIZE is grid size in meters in both x- and y-direction.\nEZONE is number of points over extension zone in both x- and y-direction. Default value 11.\nLMRT switch for rotated Mercator projection. If LMRT=.TRUE. LAT0 should be zero. ","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"note: NLON NLAT\nNLON and NLAT should satisfy the equation 5^a * 3^b * 2^c, where a-c are integers >= 0. ","category":"page"},{"location":"#","page":"Domain.jl documentation","title":"Domain.jl documentation","text":"lonlat2lcc(d::Domain, lonlat)\nlcc2lonlat(d::Domain, xy)\nreaddomain(domainname::String)\ngetgridpoints(d; gsize = d.GSIZE)\nBase.in(lonlat, d::Domain; with_ezone::Bool = false)","category":"page"},{"location":"#Domains.lonlat2lcc-Tuple{Domain,Any}","page":"Domain.jl documentation","title":"Domains.lonlat2lcc","text":"lonlat2lcc(d,lonlat)\n\nReturns Lambert Conformal Conic projection coordinates for lonlat using domain definition from d\n\n\n\n\n\n","category":"method"},{"location":"#Domains.lcc2lonlat-Tuple{Domain,Any}","page":"Domain.jl documentation","title":"Domains.lcc2lonlat","text":"lcc2lonlat(d,xy)\n\nReturns lonlat coordinates for Lambert Conformal Conic projection coordinates xy using domain definitions from d\n\n\n\n\n\n","category":"method"},{"location":"#Domains.readdomain-Tuple{String}","page":"Domain.jl documentation","title":"Domains.readdomain","text":"readdomain(domainname)\n\nReturns a Domain  \n\n\n\n\n\n","category":"method"},{"location":"#Domains.getgridpoints-Tuple{Any}","page":"Domain.jl documentation","title":"Domains.getgridpoints","text":"getgridpoints(d; gsize=d.GSIZE)\n\nReturns an array with the latlon coordinates of the grid points\n\n\n\n\n\n","category":"method"},{"location":"#Base.in-Tuple{Any,Domain}","page":"Domain.jl documentation","title":"Base.in","text":"in(lonlat, d; with_ezone = false) \nlonlat in d \nlonlat ∈ d\n\nReturns true if lonlat is inside Domain d\n\n\n\n\n\n","category":"method"}]
}
